name: Build, Deploy, and Upload Artifacts

on:
  push:
    branches:
      - '**'  # Trigger on all branches
  pull_request:
    branches:
      - master  # Trigger on PRs targeting the master branch
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the project with Maven
      - name: Build with Maven
        run: mvn clean install

      # Upload the JAR as an artifact
      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v3
        with:
          name: bus-booking-app
          path: target/bus-booking-app-1.0-SNAPSHOT.jar

      # Run the Spring Boot application in the background
      - name: Run Spring Boot App
        run: mvn spring-boot:run &
        env:
          SPRING_PROFILES_ACTIVE: "test"  # Set the Spring profile as needed

      # Validate that the application is running by sending a request to the app
      - name: Validate App is Running
        run: |
          echo "Waiting for the app to start..."
          sleep 15  # Adjust this if your app takes longer to start
          echo "Checking if the app is running..."
          RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080)
          if [ "$RESPONSE" -eq 200 ]; then
            echo "The app is running successfully!"
          else
            echo "The app failed to start. HTTP response code: $RESPONSE"
            exit 1
          fi

      # Wait for 5 minutes before stopping the app
      - name: Wait for 5 minutes
        run: |
          echo "App has been running for 5 minutes. Waiting..."
          sleep 300  # Wait for 5 minutes (300 seconds)

      # Gracefully stop the Spring Boot app using spring-boot:stop
      - name: Gracefully Stop Spring Boot App
        run: |
          echo "Stopping the app gracefully..."
          mvn spring-boot:stop
